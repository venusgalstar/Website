{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\Upwork\\\\Luke,Eric,AvalancheDefi\\\\Milestone3\\\\Fire\\\\Phoenix\\\\src\\\\components\\\\ring\\\\Nodes.js\";\nimport React from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst renderThumb = ({\n  style,\n  ...props\n}) => {\n  const thumbStyle = {\n    borderRadius: 6,\n    backgroundColor: 'rgba(35, 49, 86, 0.8)'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: { ...style,\n      ...thumbStyle\n    },\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 12\n  }, this);\n};\n\nconst CustomScrollbars = props => /*#__PURE__*/_jsxDEV(Scrollbars, {\n  renderThumbHorizontal: renderThumb,\n  renderThumbVertical: renderThumb,\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 15,\n  columnNumber: 5\n}, this);\n\n_c = CustomScrollbars;\n\nclass Nodes extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      my_nodes: []\n    };\n    this.props.dispatch({\n      type: \"GET_NODE_LIST\"\n    });\n    this.timer = setInterval(() => {\n      this.updateRewards();\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevProps) {\n    return {\n      my_nodes: nextProps.my_nodes\n    };\n  }\n\n  updateRewards() {\n    if (this.state.my_nodes == null) {\n      return;\n    }\n\n    var list = [];\n    var sum = 0;\n\n    for (var item in this.state.my_nodes) {\n      const temp = this.state.my_nodes[item];\n      temp['reward'] = Number(temp['reward']) + 0.225 / (3600 * 24);\n      temp['reward'] = temp['reward'].toFixed(9);\n      sum += temp['reward'];\n      list.push(temp);\n    }\n\n    this.setState({\n      my_nodes: list\n    });\n    this.props.dispatch({\n      type: \"UPDATE_ALL_REWARD\",\n      payload: {\n        cur_all_reward: sum\n      }\n    });\n  }\n\n  claimNode(id) {\n    this.props.dispatch({\n      type: \"CLAIM_NODE\",\n      payload: {\n        node_id: id\n      }\n    });\n  }\n\n  payNodeFee(id) {\n    this.props.dispatch({\n      type: \"PAY_NODE_FEE\",\n      payload: {\n        node_id: id\n      }\n    });\n  }\n\n  render() {\n    const List = this.state.my_nodes.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fs-18 flex align-center\",\n        style: {\n          height: \"50px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"padder-10\",\n          style: {\n            flex: \"3\"\n          },\n          children: [item.masterNFT ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/img/meat1.png\",\n            style: {\n              width: \"20px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 44\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), item.granNFT ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/img/covid1.png\",\n            style: {\n              width: \"20px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 43\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), \"Node:\", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          style: {\n            flex: \"1\"\n          },\n          children: moment(item.createTime * 1000).format(\"YYYY.MM.DD HH:mm:ss\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          style: {\n            flex: \"1\"\n          },\n          children: moment(item.createTime * 1000).format(\"YYYY.MM.DD HH:mm:ss\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          style: {\n            flex: \"1\"\n          },\n          children: item.reward\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          style: {\n            flex: \"1\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"claim-button c-green\",\n            onClick: this.payNodeFee.bind(this, index),\n            children: \"Pay Fee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          style: {\n            flex: \"1\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"claim-button text-green\",\n            onClick: this.claimNode.bind(this, index),\n            children: \" CLAIM \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this);\n    });\n\n    if (this.state.my_nodes.length == 0) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mx-auto m-t-20 mynode-header flex align-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"c-yellow fs-30 flex align-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                alt: \"\",\n                src: \"/img/myNode.svg\",\n                style: {\n                  marginRight: \"10px\",\n                  width: \"30px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 33\n              }, this), this.props.my_nodes.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"c-yellow fs-30 flex align-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                alt: \"\",\n                src: \"/img/meat.png\",\n                style: {\n                  marginRight: \"10px\",\n                  width: \"30px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 33\n              }, this), \":10\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"c-yellow fs-30 flex align-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                alt: \"\",\n                src: \"/img/covid.png\",\n                style: {\n                  marginRight: \"10px\",\n                  width: \"30px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 33\n              }, this), \":1\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"claim-button c-green claim-all\",\n              style: {\n                width: \"150px\",\n                height: \"50px\"\n              },\n              onClick: this.claimNode.bind(this, -1),\n              children: \" CLAIM ALL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mx-auto custom-container mx-auto text-justify info-container m-b-30 mynode-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-40 flex align-center fs-20\",\n            style: {\n              width: \"100%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"c-4cce13 padder-10\",\n              style: {\n                flex: \"3\"\n              },\n              children: \"NAME\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"c-4cce13 text-center\",\n              style: {\n                flex: \"1\"\n              },\n              children: \"CREATED\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"c-4cce13 text-center\",\n              style: {\n                flex: \"1\"\n              },\n              children: \"REMAINS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"c-4cce13 text-center\",\n              style: {\n                flex: \"1\"\n              },\n              children: \"REWARDS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"c-4cce13 text-center\",\n              style: {\n                flex: \"1\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"c-4cce13 text-center\",\n              style: {\n                flex: \"1\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mynode-list-content\",\n            children: /*#__PURE__*/_jsxDEV(CustomScrollbars, {\n              children: List\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(\"node list\", state);\n  return {\n    my_nodes: state.my_nodes\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatch\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Nodes);\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomScrollbars\");","map":{"version":3,"sources":["D:/Work/Upwork/Luke,Eric,AvalancheDefi/Milestone3/Fire/Phoenix/src/components/ring/Nodes.js"],"names":["React","Scrollbars","connect","moment","renderThumb","style","props","thumbStyle","borderRadius","backgroundColor","CustomScrollbars","Nodes","Component","constructor","state","my_nodes","dispatch","type","timer","setInterval","updateRewards","componentWillUnmount","clearInterval","getDerivedStateFromProps","nextProps","prevProps","list","sum","item","temp","Number","toFixed","push","setState","payload","cur_all_reward","claimNode","id","node_id","payNodeFee","render","List","map","index","height","flex","masterNFT","width","granNFT","createTime","format","reward","bind","length","marginRight","mapStateToProps","console","log","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAAS,KAAGC;AAAZ,CAAD,KAAyB;AACzC,QAAMC,UAAU,GAAG;AACfC,IAAAA,YAAY,EAAE,CADC;AAEfC,IAAAA,eAAe,EAAE;AAFF,GAAnB;AAIA,sBAAO;AAAK,IAAA,KAAK,EAAE,EAAE,GAAGJ,KAAL;AAAY,SAAGE;AAAf,KAAZ;AAAA,OAA6CD;AAA7C;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAND;;AAQA,MAAMI,gBAAgB,GAAGJ,KAAK,iBAC1B,QAAC,UAAD;AACI,EAAA,qBAAqB,EAAEF,WAD3B;AAEI,EAAA,mBAAmB,EAAEA,WAFzB;AAAA,KAGQE;AAHR;AAAA;AAAA;AAAA;AAAA,QADJ;;KAAMI,gB;;AAQN,MAAMC,KAAN,SAAoBX,KAAK,CAACY,SAA1B,CAAoC;AAEhCC,EAAAA,WAAW,CAACP,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKQ,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAGA,SAAKT,KAAL,CAAWU,QAAX,CAAoB;AAChBC,MAAAA,IAAI,EAAE;AADU,KAApB;AAGA,SAAKC,KAAL,GAAaC,WAAW,CAAC,MAAM;AAC3B,WAAKC,aAAL;AACH,KAFuB,EAErB,IAFqB,CAAxB;AAGH;;AAEDC,EAAAA,oBAAoB,GAAG;AACnBC,IAAAA,aAAa,CAAC,KAAKJ,KAAN,CAAb;AACH;;AAE8B,SAAxBK,wBAAwB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AAClD,WAAO;AAAEV,MAAAA,QAAQ,EAAES,SAAS,CAACT;AAAtB,KAAP;AACH;;AAEDK,EAAAA,aAAa,GAAG;AACZ,QAAI,KAAKN,KAAL,CAAWC,QAAX,IAAuB,IAA3B,EAAiC;AAC7B;AACH;;AACD,QAAIW,IAAI,GAAG,EAAX;AACA,QAAIC,GAAG,GAAG,CAAV;;AACA,SAAK,IAAIC,IAAT,IAAiB,KAAKd,KAAL,CAAWC,QAA5B,EAAsC;AAClC,YAAMc,IAAI,GAAG,KAAKf,KAAL,CAAWC,QAAX,CAAoBa,IAApB,CAAb;AACAC,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiBC,MAAM,CAACD,IAAI,CAAC,QAAD,CAAL,CAAN,GAAyB,SAAS,OAAO,EAAhB,CAA1C;AACAA,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiBA,IAAI,CAAC,QAAD,CAAJ,CAAeE,OAAf,CAAuB,CAAvB,CAAjB;AACAJ,MAAAA,GAAG,IAAIE,IAAI,CAAC,QAAD,CAAX;AACAH,MAAAA,IAAI,CAACM,IAAL,CAAUH,IAAV;AACH;;AACD,SAAKI,QAAL,CAAc;AAAElB,MAAAA,QAAQ,EAAEW;AAAZ,KAAd;AACA,SAAKpB,KAAL,CAAWU,QAAX,CAAoB;AAACC,MAAAA,IAAI,EAAC,mBAAN;AAA2BiB,MAAAA,OAAO,EAAC;AACnDC,QAAAA,cAAc,EAAER;AADmC;AAAnC,KAApB;AAGH;;AAEDS,EAAAA,SAAS,CAACC,EAAD,EAAK;AACV,SAAK/B,KAAL,CAAWU,QAAX,CAAoB;AAChBC,MAAAA,IAAI,EAAE,YADU;AAEhBiB,MAAAA,OAAO,EAAE;AACLI,QAAAA,OAAO,EAAED;AADJ;AAFO,KAApB;AAMH;;AAEDE,EAAAA,UAAU,CAACF,EAAD,EAAK;AACX,SAAK/B,KAAL,CAAWU,QAAX,CAAoB;AAChBC,MAAAA,IAAI,EAAE,cADU;AAEhBiB,MAAAA,OAAO,EAAE;AACLI,QAAAA,OAAO,EAAED;AADJ;AAFO,KAApB;AAMH;;AAGDG,EAAAA,MAAM,GAAG;AACL,UAAMC,IAAI,GAAG,KAAK3B,KAAL,CAAWC,QAAX,CAAoB2B,GAApB,CAAwB,CAACd,IAAD,EAAOe,KAAP,KAAiB;AAClD,0BACI;AAAiB,QAAA,SAAS,EAAC,yBAA3B;AAAqD,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAA5D;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,WAAf;AAA2B,UAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAE;AAAR,WAAlC;AAAA,qBAEOjB,IAAI,CAACkB,SAAL,gBAAgB;AAAK,YAAA,GAAG,EAAC,gBAAT;AAA0B,YAAA,KAAK,EAAE;AAAEC,cAAAA,KAAK,EAAE;AAAT;AAAjC;AAAA;AAAA;AAAA;AAAA,kBAAhB,gBAAwE,qCAF/E,EAKOnB,IAAI,CAACoB,OAAL,gBAAe;AAAK,YAAA,GAAG,EAAC,iBAAT;AAA2B,YAAA,KAAK,EAAE;AAAED,cAAAA,KAAK,EAAE;AAAT;AAAlC;AAAA;AAAA;AAAA;AAAA,kBAAf,gBAAyE,qCALhF,WAQKJ,KAAK,GAAG,CARb;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAWI;AAAK,UAAA,SAAS,EAAC,aAAf;AAA6B,UAAA,KAAK,EAAE;AAAEE,YAAAA,IAAI,EAAE;AAAR,WAApC;AAAA,oBAAoD1C,MAAM,CAACyB,IAAI,CAACqB,UAAL,GAAkB,IAAnB,CAAN,CAA+BC,MAA/B,CAAsC,qBAAtC;AAApD;AAAA;AAAA;AAAA;AAAA,gBAXJ,eAYI;AAAK,UAAA,SAAS,EAAC,aAAf;AAA6B,UAAA,KAAK,EAAE;AAAEL,YAAAA,IAAI,EAAE;AAAR,WAApC;AAAA,oBAAoD1C,MAAM,CAACyB,IAAI,CAACqB,UAAL,GAAkB,IAAnB,CAAN,CAA+BC,MAA/B,CAAsC,qBAAtC;AAApD;AAAA;AAAA;AAAA;AAAA,gBAZJ,eAaI;AAAK,UAAA,SAAS,EAAC,aAAf;AAA6B,UAAA,KAAK,EAAE;AAAEL,YAAAA,IAAI,EAAE;AAAR,WAApC;AAAA,oBAAoDjB,IAAI,CAACuB;AAAzD;AAAA;AAAA;AAAA;AAAA,gBAbJ,eAcI;AAAK,UAAA,SAAS,EAAC,aAAf;AAA6B,UAAA,KAAK,EAAE;AAAEN,YAAAA,IAAI,EAAE;AAAR,WAApC;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,sBAAf;AAAsC,YAAA,OAAO,EAAE,KAAKN,UAAL,CAAgBa,IAAhB,CAAqB,IAArB,EAA2BT,KAA3B,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAdJ,eAmBI;AAAK,UAAA,SAAS,EAAC,aAAf;AAA6B,UAAA,KAAK,EAAE;AAAEE,YAAAA,IAAI,EAAE;AAAR,WAApC;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,yBAAf;AAAyC,YAAA,OAAO,EAAE,KAAKT,SAAL,CAAegB,IAAf,CAAoB,IAApB,EAA0BT,KAA1B,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAnBJ;AAAA,SAAUA,KAAV;AAAA;AAAA;AAAA;AAAA,cADJ;AAyBH,KA1BY,CAAb;;AA4BA,QAAI,KAAK7B,KAAL,CAAWC,QAAX,CAAoBsC,MAApB,IAA8B,CAAlC,EAAqC;AACjC,0BAAO,qCAAP;AACH,KAFD,MAEO;AACH,0BACI;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,gEAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,kCAAf;AAAA,sCACI;AAAK,gBAAA,GAAG,EAAC,EAAT;AAAY,gBAAA,GAAG,EAAC,iBAAhB;AAAkC,gBAAA,KAAK,EAAE;AAAEC,kBAAAA,WAAW,EAAE,MAAf;AAAuBP,kBAAAA,KAAK,EAAE;AAA9B;AAAzC;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEK,KAAKzC,KAAL,CAAWS,QAAX,CAAoBsC,MAFzB;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAKI;AAAK,cAAA,SAAS,EAAC,kCAAf;AAAA,sCACI;AAAK,gBAAA,GAAG,EAAC,EAAT;AAAY,gBAAA,GAAG,EAAC,eAAhB;AAAgC,gBAAA,KAAK,EAAE;AAAEC,kBAAAA,WAAW,EAAE,MAAf;AAAuBP,kBAAAA,KAAK,EAAE;AAA9B;AAAvC;AAAA;AAAA;AAAA;AAAA,sBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,eASI;AAAK,cAAA,SAAS,EAAC,kCAAf;AAAA,sCACI;AAAK,gBAAA,GAAG,EAAC,EAAT;AAAY,gBAAA,GAAG,EAAC,gBAAhB;AAAiC,gBAAA,KAAK,EAAE;AAAEO,kBAAAA,WAAW,EAAE,MAAf;AAAuBP,kBAAAA,KAAK,EAAE;AAA9B;AAAxC;AAAA;AAAA;AAAA;AAAA,sBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAgBI;AAAA,mCACI;AAAK,cAAA,SAAS,EAAC,gCAAf;AAAgD,cAAA,KAAK,EAAE;AAAEA,gBAAAA,KAAK,EAAE,OAAT;AAAkBH,gBAAAA,MAAM,EAAE;AAA1B,eAAvD;AAA2F,cAAA,OAAO,EAAE,KAAKR,SAAL,CAAegB,IAAf,CAAoB,IAApB,EAA0B,CAAC,CAA3B,CAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAqBI;AAAK,UAAA,SAAS,EAAC,iFAAf;AAAA,kCAGI;AAAK,YAAA,SAAS,EAAC,8BAAf;AAA8C,YAAA,KAAK,EAAE;AAAEL,cAAAA,KAAK,EAAE;AAAT,aAArD;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,oBAAf;AAAoC,cAAA,KAAK,EAAE;AAAEF,gBAAAA,IAAI,EAAE;AAAR,eAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAK,cAAA,SAAS,EAAC,sBAAf;AAAsC,cAAA,KAAK,EAAE;AAAEA,gBAAAA,IAAI,EAAE;AAAR,eAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAK,cAAA,SAAS,EAAC,sBAAf;AAAsC,cAAA,KAAK,EAAE;AAAEA,gBAAAA,IAAI,EAAE;AAAR,eAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAK,cAAA,SAAS,EAAC,sBAAf;AAAsC,cAAA,KAAK,EAAE;AAAEA,gBAAAA,IAAI,EAAE;AAAR,eAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI;AAAK,cAAA,SAAS,EAAC,sBAAf;AAAsC,cAAA,KAAK,EAAE;AAAEA,gBAAAA,IAAI,EAAE;AAAR;AAA7C;AAAA;AAAA;AAAA;AAAA,oBALJ,eAMI;AAAK,cAAA,SAAS,EAAC,sBAAf;AAAsC,cAAA,KAAK,EAAE;AAAEA,gBAAAA,IAAI,EAAE;AAAR;AAA7C;AAAA;AAAA;AAAA;AAAA,oBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAWI;AAAK,YAAA,SAAS,EAAC,qBAAf;AAAA,mCAEI,QAAC,gBAAD;AAAA,wBACKJ;AADL;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,kBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBArBJ;AAAA,sBADJ;AA0CH;AACJ;;AAxI+B;;AA2IpC,MAAMc,eAAe,GAAGzC,KAAK,IAAI;AAC7B0C,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB3C,KAAzB;AACA,SAAO;AAAEC,IAAAA,QAAQ,EAAED,KAAK,CAACC;AAAlB,GAAP;AACH,CAHD;;AAKA,MAAM2C,kBAAkB,GAAG1C,QAAQ,IAAI;AACnC,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACH,CAFD;;AAIA,eAAed,OAAO,CAACqD,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C/C,KAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\n\r\nconst renderThumb = ({ style, ...props }) => {\r\n    const thumbStyle = {\r\n        borderRadius: 6,\r\n        backgroundColor: 'rgba(35, 49, 86, 0.8)'\r\n    };\r\n    return <div style={{ ...style, ...thumbStyle }} {...props} />;\r\n};\r\n\r\nconst CustomScrollbars = props => (\r\n    <Scrollbars\r\n        renderThumbHorizontal={renderThumb}\r\n        renderThumbVertical={renderThumb}\r\n        {...props}\r\n    />\r\n);\r\n\r\nclass Nodes extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            my_nodes: []\r\n        }\r\n        this.props.dispatch({\r\n            type: \"GET_NODE_LIST\"\r\n        });\r\n        this.timer = setInterval(() => {\r\n            this.updateRewards();\r\n        }, 1000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timer);\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevProps) {\r\n        return { my_nodes: nextProps.my_nodes };\r\n    }\r\n\r\n    updateRewards() {\r\n        if (this.state.my_nodes == null) {\r\n            return;\r\n        }\r\n        var list = [];\r\n        var sum = 0;\r\n        for (var item in this.state.my_nodes) {\r\n            const temp = this.state.my_nodes[item];\r\n            temp['reward'] = Number(temp['reward']) + 0.225 / (3600 * 24);\r\n            temp['reward'] = temp['reward'].toFixed(9);\r\n            sum += temp['reward'];\r\n            list.push(temp);\r\n        }\r\n        this.setState({ my_nodes: list });\r\n        this.props.dispatch({type:\"UPDATE_ALL_REWARD\", payload:{\r\n            cur_all_reward: sum\r\n        }})\r\n    }\r\n\r\n    claimNode(id) {\r\n        this.props.dispatch({\r\n            type: \"CLAIM_NODE\",\r\n            payload: {\r\n                node_id: id\r\n            }\r\n        });\r\n    }\r\n\r\n    payNodeFee(id) {\r\n        this.props.dispatch({\r\n            type: \"PAY_NODE_FEE\",\r\n            payload: {\r\n                node_id: id\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const List = this.state.my_nodes.map((item, index) => {\r\n            return (\r\n                <div key={index} className='fs-18 flex align-center' style={{ height: \"50px\" }}>\r\n                    <div className='padder-10' style={{ flex: \"3\" }}>\r\n                       {\r\n                           item.masterNFT? <img src='/img/meat1.png' style={{ width: \"20px\" }} />: <></>\r\n                       }\r\n                       {\r\n                           item.granNFT?  <img src='/img/covid1.png' style={{ width: \"20px\" }} /> : <></>\r\n                       }                        \r\n                        Node:\r\n                        {index + 1}\r\n                    </div>\r\n                    <div className='text-center' style={{ flex: \"1\" }}>{moment(item.createTime * 1000).format(\"YYYY.MM.DD HH:mm:ss\")}</div>\r\n                    <div className='text-center' style={{ flex: \"1\" }}>{moment(item.createTime * 1000).format(\"YYYY.MM.DD HH:mm:ss\")}</div>\r\n                    <div className='text-center' style={{ flex: \"1\" }}>{item.reward}</div>\r\n                    <div className='text-center' style={{ flex: \"1\" }}>\r\n                        <div className=\"claim-button c-green\" onClick={this.payNodeFee.bind(this, index)}>\r\n                            Pay Fee\r\n                        </div>\r\n                    </div>\r\n                    <div className='text-center' style={{ flex: \"1\" }}>\r\n                        <div className=\"claim-button text-green\" onClick={this.claimNode.bind(this, index)}> CLAIM </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        });\r\n\r\n        if (this.state.my_nodes.length == 0) {\r\n            return <></>;\r\n        } else {\r\n            return (\r\n                <>\r\n                    <div className=\"mx-auto m-t-20 mynode-header flex align-center justify-between\">\r\n                        <div className='flex'>\r\n                            <div className='c-yellow fs-30 flex align-center'>\r\n                                <img alt=\"\" src=\"/img/myNode.svg\" style={{ marginRight: \"10px\", width: \"30px\" }} />\r\n                                {this.props.my_nodes.length}\r\n                            </div>\r\n                            <div className='c-yellow fs-30 flex align-center'>\r\n                                <img alt=\"\" src=\"/img/meat.png\" style={{ marginRight: \"10px\", width: \"30px\" }} />\r\n                                :10\r\n                            </div>\r\n                            <div className='c-yellow fs-30 flex align-center'>\r\n                                <img alt=\"\" src=\"/img/covid.png\" style={{ marginRight: \"10px\", width: \"30px\" }} />\r\n                                :1\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div>\r\n                            <div className='claim-button c-green claim-all' style={{ width: \"150px\", height: \"50px\" }} onClick={this.claimNode.bind(this, -1)}> CLAIM ALL</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"mx-auto custom-container mx-auto text-justify info-container m-b-30 mynode-list\">\r\n\r\n\r\n                        <div className='h-40 flex align-center fs-20' style={{ width: \"100%\" }}>\r\n                            <div className='c-4cce13 padder-10' style={{ flex: \"3\" }}>NAME</div>\r\n                            <div className='c-4cce13 text-center' style={{ flex: \"1\" }}>CREATED</div>\r\n                            <div className='c-4cce13 text-center' style={{ flex: \"1\" }}>REMAINS</div>\r\n                            <div className='c-4cce13 text-center' style={{ flex: \"1\" }}>REWARDS</div>\r\n                            <div className='c-4cce13 text-center' style={{ flex: \"1\" }}></div>\r\n                            <div className='c-4cce13 text-center' style={{ flex: \"1\" }}></div>\r\n                        </div>\r\n                        <div className='mynode-list-content'>\r\n                            {/* <CustomScrollbars autoHide autoHideTimeout={500} autoHideDuration={200}> */}\r\n                            <CustomScrollbars>\r\n                                {List}\r\n                            </CustomScrollbars>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    console.log(\"node list\", state);\r\n    return { my_nodes: state.my_nodes };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return { dispatch }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Nodes);\r\n"]},"metadata":{},"sourceType":"module"}