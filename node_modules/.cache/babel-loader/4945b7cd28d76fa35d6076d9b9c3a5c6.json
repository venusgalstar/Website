{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\Upwork\\\\Luke,Eric,AvalancheDefi\\\\Milestone3\\\\Fire\\\\Phoenix\\\\src\\\\components\\\\ring\\\\Nodes.js\";\nimport React from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport PayDlg from '../common/PayDlg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst renderThumb = ({\n  style,\n  ...props\n}) => {\n  const thumbStyle = {\n    borderRadius: 6,\n    backgroundColor: 'rgba(35, 49, 86, 0.8)'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: { ...style,\n      ...thumbStyle\n    },\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 12\n  }, this);\n};\n\nconst CustomScrollbars = props => /*#__PURE__*/_jsxDEV(Scrollbars, {\n  renderThumbHorizontal: renderThumb,\n  renderThumbVertical: renderThumb,\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 5\n}, this);\n\n_c = CustomScrollbars;\n\nclass Nodes extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      my_nodes: [],\n      open: false,\n      fee_index: -1\n    };\n    this.props.dispatch({\n      type: \"GET_NODE_LIST\"\n    });\n    this.timer = setInterval(() => {\n      this.updateRewards();\n    }, 1000);\n    this.handleModalClose = this.handleModalClose.bind(this);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevProps) {\n    return {\n      my_nodes: nextProps.my_nodes\n    };\n  }\n\n  updateRewards() {\n    if (this.state.my_nodes == null) {\n      return;\n    }\n\n    var list = [];\n    var sum = 0;\n\n    for (var item in this.state.my_nodes) {\n      const temp = this.state.my_nodes[item];\n      var remain = moment(temp.lastTime * 1000).diff(this.props.currentTime * 1000);\n\n      if (remain > 0) {\n        var duration = moment.duration(remain);\n        temp['remains'] = duration.months() + \"m - \" + duration.days() + \"d \" + duration.hours() + \":\" + duration.minutes() + \":\" + duration.seconds();\n        var bonus = 0.225;\n\n        if (temp['masterNFT']) {\n          bonus += 0.025;\n        }\n\n        if (temp['grandNFT']) {\n          bonus += 0.05;\n        }\n\n        temp['reward'] = Number(temp['reward']) + bonus / (3600 * 24);\n        sum += temp['reward'];\n        temp['reward'] = temp['reward'].toFixed(9);\n      } else {\n        temp['remains'] = 'Expired';\n        temp['reward'] = 0;\n      }\n\n      list.push(temp);\n    }\n\n    var curTime = Number(this.props.currentTime);\n\n    if (curTime !== 0) {\n      curTime = curTime + 1;\n    }\n\n    this.setState({\n      my_nodes: list\n    });\n    this.props.dispatch({\n      type: \"RETURN_DATA\",\n      payload: {\n        cur_all_reward: sum,\n        currentTime: curTime\n      }\n    });\n  }\n\n  claimNode(id) {\n    this.props.dispatch({\n      type: \"CLAIM_NODE\",\n      payload: {\n        node_id: id\n      }\n    });\n  }\n\n  handleModalClose(value) {\n    this.setState({\n      open: false\n    });\n\n    if (value) {\n      this.props.dispatch({\n        type: \"PAY_NODE_FEE\",\n        payload: {\n          node_id: this.state.fee_index,\n          duration: value.id\n        }\n      });\n    }\n  }\n\n  payNodeFee(id) {\n    this.setState({\n      open: true,\n      fee_index: id\n    });\n  }\n\n  render() {\n    const List = this.state.my_nodes.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fs-18 flex align-center\",\n        style: {\n          height: \"50px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"padder-10\",\n          style: {\n            flex: \"3\"\n          },\n          children: [item.masterNFT ? /*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"\",\n            src: this.props.master_nft_url,\n            style: {\n              width: \"20px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 46\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), item.granNFT ? /*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"\",\n            src: this.props.grand_nft_url,\n            style: {\n              width: \"20px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 44\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), \"Node:\", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          style: {\n            flex: \"2\"\n          },\n          children: moment(item.createTime * 1000).format(\"MMM DD YYYY HH:mm:ss\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          style: {\n            flex: \"2\"\n          },\n          children: item.remains\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          style: {\n            flex: \"2\"\n          },\n          children: item.reward\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          style: {\n            flex: \"1\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"claim-button c-green\",\n            onClick: this.payNodeFee.bind(this, index),\n            children: \"Pay Fee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          style: {\n            flex: \"1\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"claim-button text-green\",\n            onClick: this.claimNode.bind(this, index),\n            children: \" CLAIM \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this);\n    });\n\n    if (this.state.my_nodes.length === 0) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(PayDlg, {\n          selectedValue: this.state.selectedValue,\n          open: this.state.open,\n          onClose: this.handleModalClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mx-auto m-t-20 mynode-header flex align-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"c-yellow fs-30 flex align-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                alt: \"\",\n                src: \"/img/myNode.svg\",\n                style: {\n                  marginRight: \"10px\",\n                  width: \"30px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 33\n              }, this), this.props.my_nodes.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"c-yellow fs-30 flex align-center m-l-20\",\n              style: {\n                width: \"100px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                alt: \"\",\n                src: this.props.master_nft_url,\n                style: {\n                  marginRight: \"10px\",\n                  width: \"30px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 33\n              }, this), \": \", this.props.my_nfts.length <= 10 ? this.props.my_nfts.length : 10]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"c-yellow fs-30 flex align-center m-l-20\",\n              style: {\n                width: \"100px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                alt: \"\",\n                src: this.props.grand_nft_url,\n                style: {\n                  marginRight: \"10px\",\n                  width: \"30px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 33\n              }, this), \": \", this.props.my_nfts.length > 10 ? this.props.my_nfts.length - 10 : 0]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"claim-button c-green claim-all\",\n              style: {\n                width: \"150px\",\n                height: \"50px\"\n              },\n              onClick: this.claimNode.bind(this, -1),\n              children: \" CLAIM ALL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mx-auto custom-container mx-auto text-justify info-container m-b-30 mynode-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-40 flex align-center fs-20\",\n            style: {\n              width: \"100%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"c-4cce13 padder-10\",\n              style: {\n                flex: \"3\"\n              },\n              children: \"NAME\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"c-4cce13 text-center\",\n              style: {\n                flex: \"2\"\n              },\n              children: \"CREATED\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"c-4cce13 text-center\",\n              style: {\n                flex: \"2\"\n              },\n              children: \"REMAINS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"c-4cce13 text-center\",\n              style: {\n                flex: \"2\"\n              },\n              children: \"REWARDS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"c-4cce13 text-center\",\n              style: {\n                flex: \"1\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"c-4cce13 text-center\",\n              style: {\n                flex: \"1\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mynode-list-content\",\n            children: /*#__PURE__*/_jsxDEV(CustomScrollbars, {\n              children: List\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    my_nodes: state.my_nodes,\n    currentTime: state.currentTime,\n    my_nfts: state.my_nfts,\n    master_nft_url: state.master_nft_url,\n    grand_nft_url: state.grand_nft_url\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatch\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Nodes);\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomScrollbars\");","map":{"version":3,"sources":["D:/Work/Upwork/Luke,Eric,AvalancheDefi/Milestone3/Fire/Phoenix/src/components/ring/Nodes.js"],"names":["React","Scrollbars","connect","moment","PayDlg","renderThumb","style","props","thumbStyle","borderRadius","backgroundColor","CustomScrollbars","Nodes","Component","constructor","state","my_nodes","open","fee_index","dispatch","type","timer","setInterval","updateRewards","handleModalClose","bind","componentWillUnmount","clearInterval","getDerivedStateFromProps","nextProps","prevProps","list","sum","item","temp","remain","lastTime","diff","currentTime","duration","months","days","hours","minutes","seconds","bonus","Number","toFixed","push","curTime","setState","payload","cur_all_reward","claimNode","id","node_id","value","payNodeFee","render","List","map","index","height","flex","masterNFT","master_nft_url","width","granNFT","grand_nft_url","createTime","format","remains","reward","length","selectedValue","marginRight","my_nfts","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\nimport PayDlg from '../common/PayDlg';\r\n\r\nconst renderThumb = ({ style, ...props }) => {\r\n    const thumbStyle = {\r\n        borderRadius: 6,\r\n        backgroundColor: 'rgba(35, 49, 86, 0.8)'\r\n    };\r\n    return <div style={{ ...style, ...thumbStyle }} {...props} />;\r\n};\r\n\r\nconst CustomScrollbars = props => (\r\n    <Scrollbars\r\n        renderThumbHorizontal={renderThumb}\r\n        renderThumbVertical={renderThumb}\r\n        {...props}\r\n    />\r\n);\r\n\r\n\r\nclass Nodes extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            my_nodes: [],\r\n            open: false,\r\n            fee_index: -1,\r\n        }\r\n        this.props.dispatch({\r\n            type: \"GET_NODE_LIST\"\r\n        });\r\n        this.timer = setInterval(() => {\r\n            this.updateRewards();\r\n        }, 1000);\r\n        this.handleModalClose = this.handleModalClose.bind(this);\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timer);\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevProps) {\r\n        return { my_nodes: nextProps.my_nodes };\r\n    }\r\n\r\n    updateRewards() {\r\n        if (this.state.my_nodes == null) {\r\n            return;\r\n        }\r\n        var list = [];\r\n        var sum = 0;\r\n        for (var item in this.state.my_nodes) {\r\n            const temp = this.state.my_nodes[item];\r\n            var remain = moment(temp.lastTime * 1000).diff(this.props.currentTime * 1000);\r\n            if (remain > 0) {\r\n                var duration = moment.duration(remain);\r\n                temp['remains'] = duration.months() + \"m - \" +\r\n                    duration.days() + \"d \" +\r\n                    duration.hours() + \":\" +\r\n                    duration.minutes() + \":\" +\r\n                    duration.seconds();\r\n\r\n                var bonus = 0.225;\r\n                if (temp['masterNFT']) {\r\n                    bonus += 0.025;\r\n                }\r\n                if (temp['grandNFT']) {\r\n                    bonus += 0.05;\r\n                }\r\n                temp['reward'] = Number(temp['reward']) + bonus / (3600 * 24);\r\n                sum += temp['reward'];\r\n                temp['reward'] = temp['reward'].toFixed(9);\r\n            } else {\r\n                temp['remains'] = 'Expired';\r\n                temp['reward'] = 0;\r\n            }\r\n            list.push(temp);\r\n        }\r\n        var curTime = Number(this.props.currentTime);\r\n        if (curTime !== 0) {\r\n            curTime = curTime + 1;\r\n        }\r\n\r\n        this.setState({ my_nodes: list });\r\n        this.props.dispatch({\r\n            type: \"RETURN_DATA\", payload: {\r\n                cur_all_reward: sum,\r\n                currentTime: curTime\r\n            }\r\n        });\r\n    }\r\n\r\n    claimNode(id) {\r\n        this.props.dispatch({\r\n            type: \"CLAIM_NODE\",\r\n            payload: {\r\n                node_id: id\r\n            }\r\n        });\r\n    }\r\n\r\n    handleModalClose(value) {\r\n        this.setState({ open: false });\r\n        if (value) {\r\n            this.props.dispatch({\r\n                type: \"PAY_NODE_FEE\",\r\n                payload: {\r\n                    node_id: this.state.fee_index,\r\n                    duration: value.id\r\n                }\r\n            })\r\n        }\r\n    };\r\n\r\n    payNodeFee(id) {\r\n\r\n        this.setState({ open: true, fee_index: id });\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const List = this.state.my_nodes.map((item, index) => {\r\n            return (\r\n                <div key={index} className='fs-18 flex align-center' style={{ height: \"50px\" }}>\r\n                    <div className='padder-10' style={{ flex: \"3\" }}>\r\n                        {\r\n                            item.masterNFT ? <img alt='' src={this.props.master_nft_url} style={{ width: \"20px\" }} /> : <></>\r\n                        }\r\n                        {\r\n                            item.granNFT ? <img alt='' src={this.props.grand_nft_url} style={{ width: \"20px\" }} /> : <></>\r\n                        }\r\n                        Node:\r\n                        {index + 1}\r\n                    </div>\r\n                    <div className='text-center' style={{ flex: \"2\" }}>{moment(item.createTime * 1000).format(\"MMM DD YYYY HH:mm:ss\")}</div>\r\n                    <div className='text-center' style={{ flex: \"2\" }}>{item.remains}</div>\r\n                    <div className='text-center' style={{ flex: \"2\" }}>{item.reward}</div>\r\n                    <div className='text-center' style={{ flex: \"1\" }}>\r\n                        <div className=\"claim-button c-green\" onClick={this.payNodeFee.bind(this, index)}>\r\n                            Pay Fee\r\n                        </div>\r\n                    </div>\r\n                    <div className='text-center' style={{ flex: \"1\" }}>\r\n                        <div className=\"claim-button text-green\" onClick={this.claimNode.bind(this, index)}> CLAIM </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        });\r\n\r\n        if (this.state.my_nodes.length === 0) {\r\n            return <></>;\r\n        } else {\r\n            return (\r\n                <>\r\n                    <PayDlg\r\n                        selectedValue={this.state.selectedValue}\r\n                        open={this.state.open}\r\n                        onClose={this.handleModalClose}\r\n                    />\r\n                    <div className=\"mx-auto m-t-20 mynode-header flex align-center justify-between\">\r\n                        <div className='flex'>\r\n                            <div className='c-yellow fs-30 flex align-center'>\r\n                                <img alt=\"\" src=\"/img/myNode.svg\" style={{ marginRight: \"10px\", width: \"30px\" }} />\r\n                                {this.props.my_nodes.length}\r\n                            </div>\r\n                            <div className='c-yellow fs-30 flex align-center m-l-20' style={{ width: \"100px\" }}>\r\n                                <img alt=\"\" src={this.props.master_nft_url} style={{ marginRight: \"10px\", width: \"30px\" }} />\r\n                                : {this.props.my_nfts.length <= 10 ? this.props.my_nfts.length : 10}\r\n                            </div>\r\n                            <div className='c-yellow fs-30 flex align-center m-l-20' style={{ width: \"100px\" }}>\r\n                                <img alt=\"\" src={this.props.grand_nft_url} style={{ marginRight: \"10px\", width: \"30px\" }} />\r\n                                : {this.props.my_nfts.length > 10 ? this.props.my_nfts.length - 10 : 0}\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div>\r\n                            <div className='claim-button c-green claim-all' style={{ width: \"150px\", height: \"50px\" }} onClick={this.claimNode.bind(this, -1)}> CLAIM ALL</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"mx-auto custom-container mx-auto text-justify info-container m-b-30 mynode-list\">\r\n\r\n\r\n                        <div className='h-40 flex align-center fs-20' style={{ width: \"100%\" }}>\r\n                            <div className='c-4cce13 padder-10' style={{ flex: \"3\" }}>NAME</div>\r\n                            <div className='c-4cce13 text-center' style={{ flex: \"2\" }}>CREATED</div>\r\n                            <div className='c-4cce13 text-center' style={{ flex: \"2\" }}>REMAINS</div>\r\n                            <div className='c-4cce13 text-center' style={{ flex: \"2\" }}>REWARDS</div>\r\n                            <div className='c-4cce13 text-center' style={{ flex: \"1\" }}></div>\r\n                            <div className='c-4cce13 text-center' style={{ flex: \"1\" }}></div>\r\n                        </div>\r\n                        <div className='mynode-list-content'>\r\n                            {/* <CustomScrollbars autoHide autoHideTimeout={500} autoHideDuration={200}> */}\r\n                            <CustomScrollbars>\r\n                                {List}\r\n                            </CustomScrollbars>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        my_nodes: state.my_nodes,\r\n        currentTime: state.currentTime,\r\n        my_nfts: state.my_nfts,\r\n        master_nft_url: state.master_nft_url,\r\n        grand_nft_url: state.grand_nft_url\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return { dispatch }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Nodes);\r\n"]},"metadata":{},"sourceType":"module"}