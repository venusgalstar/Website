{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\Upwork\\\\Luke,Eric,AvalancheDefi\\\\Milestone3\\\\Fire\\\\MyPhoenix\\\\Website\\\\src\\\\components\\\\ring\\\\Nodes.js\";\nimport React from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport PayDlg from '../common/PayDlg';\nimport { toast } from 'react-toastify';\nimport { touchRippleClasses } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst renderThumb = ({\n  style,\n  ...props\n}) => {\n  const thumbStyle = {\n    borderRadius: 6,\n    backgroundColor: 'rgba(35, 49, 86, 0.8)'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: { ...style,\n      ...thumbStyle\n    },\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 12\n  }, this);\n};\n\nconst CustomScrollbars = props => /*#__PURE__*/_jsxDEV(Scrollbars, {\n  renderThumbHorizontal: renderThumb,\n  renderThumbVertical: renderThumb,\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 18,\n  columnNumber: 5\n}, this);\n\n_c = CustomScrollbars;\n\nclass Nodes extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selectTab = function (index) {\n      this.setState({\n        selected_tab: index\n      });\n    };\n\n    this.state = {\n      my_nodes: [],\n      open: false,\n      fee_index: -1,\n      selected_tab: 0\n    };\n    this.props.dispatch({\n      type: \"GET_NODE_LIST\"\n    });\n    this.timer = setInterval(() => {\n      this.updateRewards();\n    }, 1000);\n    this.handleModalClose = this.handleModalClose.bind(this);\n    this.PayAllNode = this.PayAllNode.bind(this);\n    this.createNode = this.createNode.bind(this);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevProps) {\n    return {\n      my_nodes: nextProps.my_nodes\n    };\n  }\n\n  updateRewards() {\n    if (this.state.my_nodes == null) {\n      return;\n    }\n\n    var list = [];\n    var sum = 0;\n\n    for (var item in this.state.my_nodes) {\n      const temp = this.state.my_nodes[item];\n      var remain = moment(temp.lastTime * 1000).diff(this.props.currentTime * 1000);\n\n      if (remain > 0) {\n        var duration = moment.duration(remain);\n        temp['remains'] = duration.months() + \"m - \" + duration.days() + \"d \" + duration.hours() + \":\" + duration.minutes() + \":\" + duration.seconds();\n        var bonus = 0.225;\n\n        if (temp['masterNFT']) {\n          bonus += 0.025;\n        }\n\n        if (temp['grandNFT']) {\n          bonus += 0.05;\n        }\n\n        temp['reward'] = Number(temp['reward']) + bonus / (3600 * 24);\n        sum += temp['reward'];\n        temp['reward'] = temp['reward'].toFixed(9);\n\n        if (remain > 3600 * 24 * 30) {\n          temp['payable'] = false;\n        } else {\n          temp['payable'] = true;\n        }\n      } else {\n        temp['remains'] = 'Expired';\n        temp['reward'] = 0;\n      }\n\n      list.push(temp);\n    }\n\n    var curTime = Number(this.props.currentTime);\n\n    if (curTime !== 0) {\n      curTime = curTime + 1;\n    }\n\n    this.setState({\n      my_nodes: list\n    });\n    this.props.dispatch({\n      type: \"RETURN_DATA\",\n      payload: {\n        cur_all_reward: sum,\n        currentTime: curTime\n      }\n    });\n  }\n\n  PayAllNode() {\n    if (!this.props.can_perform) {\n      toast.info(\"Please wait. Another transaction is running.\", {\n        position: \"top-center\",\n        autoClose: 3000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n      return;\n    }\n\n    this.props.dispatch({\n      type: \"UPDATE_CAN_PERFORM_STATUS\",\n      payload: {\n        can_perform: false\n      }\n    });\n    let cnt = 0;\n\n    for (var index in this.state.my_nodes) {\n      if (this.state.my_nodes[index].payable == true) {\n        cnt = cnt + 1;\n      }\n    }\n\n    this.setState({\n      open: true,\n      pay_type: 0,\n      pay_cnt: cnt\n    });\n  }\n\n  claimNode(id) {\n    if (!this.props.can_perform) {\n      toast.info(\"Please wait. Another transaction is running.\", {\n        position: \"top-center\",\n        autoClose: 3000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n      return;\n    }\n\n    this.props.dispatch({\n      type: \"UPDATE_CAN_PERFORM_STATUS\",\n      payload: {\n        can_perform: false\n      }\n    });\n    var payload = {\n      node_id: id,\n      cnt: 1\n    };\n\n    if (id == -1) {\n      let cnt = 0;\n\n      for (var index in this.state.my_nodes) {\n        if (this.state.my_nodes[index].remain !== 'Expired') {\n          cnt = cnt + 1;\n        }\n      }\n\n      payload.cnt = cnt;\n    }\n\n    this.props.dispatch({\n      type: \"CLAIM_NODE\",\n      payload: payload\n    });\n  }\n\n  handleModalClose(value) {\n    this.setState({\n      open: false\n    });\n\n    if (value) {\n      this.props.dispatch({\n        type: \"UPDATE_CAN_PERFORM_STATUS\",\n        payload: {\n          can_perform: false\n        }\n      });\n\n      if (this.state.pay_type == 1) {\n        this.props.dispatch({\n          type: \"PAY_NODE_FEE\",\n          payload: {\n            node_id: this.state.fee_index,\n            duration: value.id\n          }\n        });\n      } else if (this.state.pay_type == 0) {\n        this.props.dispatch({\n          type: \"PAY_FEE_ALL\",\n          payload: {\n            count: this.state.pay_cnt,\n            duration: value.id\n          }\n        });\n      }\n    }\n  }\n\n  payNodeFee(id) {\n    // if (!this.props.my_nodes[id].payable) {\n    //     toast.info(\"You have already purchased.\", {\n    //         position: \"top-center\",\n    //         autoClose: 3000,\n    //         hideProgressBar: true,\n    //         closeOnClick: true,\n    //         pauseOnHover: true,\n    //         draggable: true,\n    //         progress: true\n    //     });\n    //     return;\n    // }\n    if (!this.props.can_perform) {\n      toast.info(\"Please wait. Another transaction is running.\", {\n        position: \"top-center\",\n        autoClose: 3000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n      return;\n    }\n\n    this.props.dispatch({\n      type: \"UPDATE_CAN_PERFORM_STATUS\",\n      payload: {\n        can_perform: false\n      }\n    });\n    this.setState({\n      open: true,\n      fee_index: id,\n      pay_type: 1\n    });\n  }\n\n  createNode() {\n    if (!this.props.can_perform) {\n      toast.info(\"Please wait. Another transaction is running.\", {\n        position: \"top-center\",\n        autoClose: 3000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n      return;\n    }\n\n    this.props.dispatch({\n      type: \"UPDATE_CAN_PERFORM_STATUS\",\n      payload: {\n        can_perform: false\n      }\n    });\n    this.props.dispatch({\n      type: \"CREATE_NODE\"\n    });\n  }\n\n  render() {\n    const List = this.state.my_nodes.map((item, index) => {\n      // const List = [\"123\", \"222\", \"543\", \"23\", \"2342\", '234', '2342', '2333', '1231', '1231'].map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: index % 2 == 0 ? 'item-font nest-list-even' : 'item-font nest-list-odd',\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          style: {\n            flex: \"1\"\n          },\n          children: [\"NEST \", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          style: {\n            flex: \"3\"\n          },\n          children: moment(item.createTime * 1000).format(\"MMM DD YYYY\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          style: {\n            flex: \"2\"\n          },\n          children: item.reward\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          style: {\n            flex: \"2\"\n          },\n          children: item.remains\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pay-button list\",\n          style: {\n            width: \"150px\"\n          },\n          onClick: this.payNodeFee.bind(this, index),\n          children: \"Pay fee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"claim-button list\",\n          style: {\n            width: \"150px\"\n          },\n          onClick: this.claimNode.bind(this, index),\n          children: \" claim \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 21\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(PayDlg, {\n        selectedValue: this.state.selectedValue,\n        open: this.state.open,\n        onClose: this.handleModalClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        id: \"section-nests\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content mx-auto\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"nest-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"fs-40 c-w\",\n              children: [\"Create a Phoenix Nest with \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"noto-bold\",\n                children: \"10\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 60\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"c-yellow\",\n                children: \"$FIRE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 98\n              }, this), \" Tokens\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn action-btn\",\n              onClick: this.createNode,\n              children: \"Create your nest\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tab-header flex\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: this.state.selected_tab === 0 ? 'fs-40 cursor-pointer tab-item noto-bold active' : \"fs-40 noto-bold cursor-pointer tab-item\",\n              onClick: () => {\n                this.selectTab(0);\n              },\n              children: \"My Nests\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: this.state.selected_tab === 1 ? 'fs-40 cursor-pointer tab-item noto-bold active' : \"fs-40 noto-bold cursor-pointer tab-item\",\n              onClick: () => {\n                this.selectTab(1);\n              },\n              children: \"NFT Boosts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tab-content\",\n            children: this.state.selected_tab === 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"h-60 flex align-center node-title-header\",\n                style: {\n                  width: \"100%\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"padder-10 noto-bold\",\n                  style: {\n                    flex: \"1\"\n                  },\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-center noto-bold\",\n                  style: {\n                    flex: \"3\"\n                  },\n                  children: \"Created\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-center noto-bold\",\n                  style: {\n                    flex: \"2\"\n                  },\n                  children: \"My Rewards\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-center noto-bold\",\n                  style: {\n                    flex: \"2\"\n                  },\n                  children: \"Fees\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"pay-button\",\n                  style: {\n                    width: \"150px\"\n                  },\n                  onClick: this.PayAllNode.bind(this, -1),\n                  children: \"Pay all fees\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"claim-button\",\n                  style: {\n                    width: \"150px\"\n                  },\n                  onClick: this.claimNode.bind(this, -1),\n                  children: \" claim all\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mynode-list-content\",\n                children: /*#__PURE__*/_jsxDEV(CustomScrollbars, {\n                  children: List\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-center align-center\",\n                style: {\n                  width: \"100%\",\n                  height: \"100%\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"c-yellow flex align-center m-l-20 fs-40\",\n                  style: {\n                    width: \"200px\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    alt: \"\",\n                    src: this.props.master_nft_url,\n                    style: {\n                      marginRight: \"10px\",\n                      width: \"60px\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 302,\n                    columnNumber: 45\n                  }, this), \": \", this.props.my_nfts.length <= 10 ? this.props.my_nfts.length : 10]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"c-yellow flex align-center m-l-20 fs-40\",\n                  style: {\n                    width: \"200px\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    alt: \"\",\n                    src: this.props.grand_nft_url,\n                    style: {\n                      marginRight: \"10px\",\n                      width: \"60px\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 306,\n                    columnNumber: 45\n                  }, this), \": \", this.props.my_nfts.length > 10 ? this.props.my_nfts.length - 10 : 0]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 37\n              }, this)\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    my_nodes: state.my_nodes,\n    currentTime: state.currentTime,\n    my_nfts: state.my_nfts,\n    master_nft_url: state.master_nft_url,\n    grand_nft_url: state.grand_nft_url,\n    can_perform: state.can_perform\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatch\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Nodes);\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomScrollbars\");","map":{"version":3,"sources":["D:/Work/Upwork/Luke,Eric,AvalancheDefi/Milestone3/Fire/MyPhoenix/Website/src/components/ring/Nodes.js"],"names":["React","Scrollbars","connect","moment","PayDlg","toast","touchRippleClasses","renderThumb","style","props","thumbStyle","borderRadius","backgroundColor","CustomScrollbars","Nodes","Component","constructor","selectTab","index","setState","selected_tab","state","my_nodes","open","fee_index","dispatch","type","timer","setInterval","updateRewards","handleModalClose","bind","PayAllNode","createNode","componentWillUnmount","clearInterval","getDerivedStateFromProps","nextProps","prevProps","list","sum","item","temp","remain","lastTime","diff","currentTime","duration","months","days","hours","minutes","seconds","bonus","Number","toFixed","push","curTime","payload","cur_all_reward","can_perform","info","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","cnt","payable","pay_type","pay_cnt","claimNode","id","node_id","value","count","payNodeFee","render","List","map","flex","createTime","format","reward","remains","width","selectedValue","height","master_nft_url","marginRight","my_nfts","length","grand_nft_url","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\nimport PayDlg from '../common/PayDlg';\r\nimport { toast } from 'react-toastify';\r\nimport { touchRippleClasses } from '@mui/material';\r\n\r\nconst renderThumb = ({ style, ...props }) => {\r\n    const thumbStyle = {\r\n        borderRadius: 6,\r\n        backgroundColor: 'rgba(35, 49, 86, 0.8)'\r\n    };\r\n    return <div style={{ ...style, ...thumbStyle }} {...props} />;\r\n};\r\n\r\nconst CustomScrollbars = props => (\r\n    <Scrollbars\r\n        renderThumbHorizontal={renderThumb}\r\n        renderThumbVertical={renderThumb}\r\n        {...props}\r\n    />\r\n);\r\n\r\n\r\nclass Nodes extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            my_nodes: [],\r\n            open: false,\r\n            fee_index: -1,\r\n            selected_tab: 0\r\n        }\r\n        this.props.dispatch({\r\n            type: \"GET_NODE_LIST\"\r\n        });\r\n        this.timer = setInterval(() => {\r\n            this.updateRewards();\r\n        }, 1000);\r\n        this.handleModalClose = this.handleModalClose.bind(this);\r\n        this.PayAllNode = this.PayAllNode.bind(this);\r\n        this.createNode = this.createNode.bind(this);\r\n\r\n\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timer);\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevProps) {\r\n        return { my_nodes: nextProps.my_nodes };\r\n    }\r\n\r\n    updateRewards() {\r\n        if (this.state.my_nodes == null) {\r\n            return;\r\n        }\r\n        var list = [];\r\n        var sum = 0;\r\n        for (var item in this.state.my_nodes) {\r\n            const temp = this.state.my_nodes[item];\r\n            var remain = moment(temp.lastTime * 1000).diff(this.props.currentTime * 1000);\r\n            if (remain > 0) {\r\n                var duration = moment.duration(remain);\r\n                temp['remains'] = duration.months() + \"m - \" +\r\n                    duration.days() + \"d \" +\r\n                    duration.hours() + \":\" +\r\n                    duration.minutes() + \":\" +\r\n                    duration.seconds();\r\n\r\n                var bonus = 0.225;\r\n                if (temp['masterNFT']) {\r\n                    bonus += 0.025;\r\n                }\r\n                if (temp['grandNFT']) {\r\n                    bonus += 0.05;\r\n                }\r\n                temp['reward'] = Number(temp['reward']) + bonus / (3600 * 24);\r\n                sum += temp['reward'];\r\n                temp['reward'] = temp['reward'].toFixed(9);\r\n\r\n                if (remain > 3600 * 24 * 30) {\r\n                    temp['payable'] = false;\r\n                } else {\r\n                    temp['payable'] = true;\r\n                }\r\n            } else {\r\n                temp['remains'] = 'Expired';\r\n                temp['reward'] = 0;\r\n            }\r\n            list.push(temp);\r\n        }\r\n        var curTime = Number(this.props.currentTime);\r\n        if (curTime !== 0) {\r\n            curTime = curTime + 1;\r\n        }\r\n\r\n        this.setState({ my_nodes: list });\r\n        this.props.dispatch({\r\n            type: \"RETURN_DATA\", payload: {\r\n                cur_all_reward: sum,\r\n                currentTime: curTime\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    selectTab = function (index) {\r\n        this.setState({ selected_tab: index });\r\n    }\r\n\r\n\r\n    PayAllNode() {\r\n        if (!this.props.can_perform) {\r\n            toast.info(\"Please wait. Another transaction is running.\", {\r\n                position: \"top-center\",\r\n                autoClose: 3000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n            return;\r\n        }\r\n        this.props.dispatch({ type: \"UPDATE_CAN_PERFORM_STATUS\", payload: { can_perform: false } });\r\n        let cnt = 0;\r\n        for (var index in this.state.my_nodes) {\r\n            if (this.state.my_nodes[index].payable == true) {\r\n                cnt = cnt + 1;\r\n            }\r\n        }\r\n        this.setState({ open: true, pay_type: 0, pay_cnt: cnt });\r\n    }\r\n\r\n    claimNode(id) {\r\n        if (!this.props.can_perform) {\r\n            toast.info(\"Please wait. Another transaction is running.\", {\r\n                position: \"top-center\",\r\n                autoClose: 3000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n            return;\r\n        }\r\n        this.props.dispatch({ type: \"UPDATE_CAN_PERFORM_STATUS\", payload: { can_perform: false } });\r\n\r\n        var payload = { node_id: id, cnt: 1 };\r\n        if (id == -1) {\r\n            let cnt = 0;\r\n            for (var index in this.state.my_nodes) {\r\n                if (this.state.my_nodes[index].remain !== 'Expired') {\r\n                    cnt = cnt + 1;\r\n                }\r\n            }\r\n            payload.cnt = cnt;\r\n        }\r\n        this.props.dispatch({\r\n            type: \"CLAIM_NODE\",\r\n            payload: payload\r\n        });\r\n    }\r\n\r\n    handleModalClose(value) {\r\n        this.setState({ open: false });\r\n        if (value) {\r\n            this.props.dispatch({ type: \"UPDATE_CAN_PERFORM_STATUS\", payload: { can_perform: false } });\r\n            if (this.state.pay_type == 1) {\r\n\r\n                this.props.dispatch({\r\n                    type: \"PAY_NODE_FEE\",\r\n                    payload: {\r\n                        node_id: this.state.fee_index,\r\n                        duration: value.id\r\n                    }\r\n                })\r\n            } else if (this.state.pay_type == 0) {\r\n                this.props.dispatch({\r\n                    type: \"PAY_FEE_ALL\",\r\n                    payload: { count: this.state.pay_cnt, duration: value.id }\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    payNodeFee(id) {\r\n        // if (!this.props.my_nodes[id].payable) {\r\n        //     toast.info(\"You have already purchased.\", {\r\n        //         position: \"top-center\",\r\n        //         autoClose: 3000,\r\n        //         hideProgressBar: true,\r\n        //         closeOnClick: true,\r\n        //         pauseOnHover: true,\r\n        //         draggable: true,\r\n        //         progress: true\r\n        //     });\r\n        //     return;\r\n        // }\r\n        if (!this.props.can_perform) {\r\n            toast.info(\"Please wait. Another transaction is running.\", {\r\n                position: \"top-center\",\r\n                autoClose: 3000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n            return;\r\n        }\r\n        this.props.dispatch({ type: \"UPDATE_CAN_PERFORM_STATUS\", payload: { can_perform: false } });\r\n        this.setState({ open: true, fee_index: id, pay_type: 1 });\r\n    }\r\n\r\n    createNode() {\r\n        if (!this.props.can_perform) {\r\n            toast.info(\"Please wait. Another transaction is running.\", {\r\n                position: \"top-center\",\r\n                autoClose: 3000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n            return;\r\n        }\r\n        this.props.dispatch({ type: \"UPDATE_CAN_PERFORM_STATUS\", payload: { can_perform: false } });\r\n        this.props.dispatch({\r\n            type: \"CREATE_NODE\"\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const List = this.state.my_nodes.map((item, index) => {\r\n        // const List = [\"123\", \"222\", \"543\", \"23\", \"2342\", '234', '2342', '2333', '1231', '1231'].map((item, index) => {\r\n            return (\r\n                <div key={index} className={index % 2 == 0 ? 'item-font nest-list-even' : 'item-font nest-list-odd'}>\r\n\r\n                    <div className='text-center' style={{ flex: \"1\" }}>NEST {index + 1}</div>\r\n                    <div className='text-center' style={{ flex: \"3\" }}>{moment(item.createTime * 1000).format(\"MMM DD YYYY\")}</div>\r\n                    <div className='text-center' style={{ flex: \"2\" }}>{item.reward}</div>\r\n                    <div className='text-center' style={{ flex: \"2\" }}>{item.remains}</div>\r\n                    <div className=\"pay-button list\" style={{ width: \"150px\" }} onClick={this.payNodeFee.bind(this, index)}>Pay fee</div>\r\n                    <div className=\"claim-button list\" style={{ width: \"150px\" }} onClick={this.claimNode.bind(this, index)}> claim </div>\r\n                </div>\r\n            )\r\n        });\r\n\r\n\r\n        return (\r\n            <>\r\n                <PayDlg\r\n                    selectedValue={this.state.selectedValue}\r\n                    open={this.state.open}\r\n                    onClose={this.handleModalClose}\r\n                />\r\n\r\n                <section id='section-nests'>\r\n                    <div className='content mx-auto'>\r\n                        <div className='nest-header'>\r\n                            <span className='fs-40 c-w'>\r\n                                Create a Phoenix Nest with <span className='noto-bold'>10</span> <span className='c-yellow'>$FIRE</span> Tokens\r\n                            </span>\r\n                            <button className='btn action-btn' onClick={this.createNode}>Create your nest</button>\r\n                        </div>\r\n                        <div className='tab-header flex'>\r\n                            <div className={this.state.selected_tab === 0 ?\r\n                                'fs-40 cursor-pointer tab-item noto-bold active' : \"fs-40 noto-bold cursor-pointer tab-item\"}\r\n                                onClick={() => { this.selectTab(0) }}>My Nests</div>\r\n                            <div className={this.state.selected_tab === 1 ?\r\n                                'fs-40 cursor-pointer tab-item noto-bold active' : \"fs-40 noto-bold cursor-pointer tab-item\"}\r\n                                onClick={() => { this.selectTab(1) }}>NFT Boosts</div>\r\n                        </div>\r\n                        <div className='tab-content'>\r\n                            {this.state.selected_tab === 0 ?\r\n                                <>\r\n                                    <div className='h-60 flex align-center node-title-header' style={{ width: \"100%\" }}>\r\n                                        <div className='padder-10 noto-bold' style={{ flex: \"1\" }}>Name</div>\r\n                                        <div className='text-center noto-bold' style={{ flex: \"3\" }}>Created</div>\r\n                                        <div className='text-center noto-bold' style={{ flex: \"2\" }}>My Rewards</div>\r\n                                        <div className='text-center noto-bold' style={{ flex: \"2\" }}>Fees</div>\r\n                                        <div className=\"pay-button\" style={{ width: \"150px\" }} onClick={this.PayAllNode.bind(this, -1)}>Pay all fees</div>\r\n                                        <div className=\"claim-button\" style={{ width: \"150px\" }} onClick={this.claimNode.bind(this, -1)}> claim all</div>\r\n                                    </div>\r\n                                    <div className='mynode-list-content'>\r\n                                        <CustomScrollbars>\r\n                                            {List}\r\n                                        </CustomScrollbars>\r\n                                    </div>\r\n                                </> :\r\n                                <>\r\n                                    <div className='flex justify-center align-center' style={{ width: \"100%\", height: \"100%\" }}>\r\n                                        <div className='c-yellow flex align-center m-l-20 fs-40' style={{ width: \"200px\" }}>\r\n                                            <img alt=\"\" src={this.props.master_nft_url} style={{ marginRight: \"10px\", width: \"60px\" }} />\r\n                                            : {this.props.my_nfts.length <= 10 ? this.props.my_nfts.length : 10}\r\n                                        </div>\r\n                                        <div className='c-yellow flex align-center m-l-20 fs-40' style={{ width: \"200px\" }}>\r\n                                            <img alt=\"\" src={this.props.grand_nft_url} style={{ marginRight: \"10px\", width: \"60px\" }} />\r\n                                            : {this.props.my_nfts.length > 10 ? this.props.my_nfts.length - 10 : 0}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </>}\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n\r\n                {/* <div className=\"mx-auto m-t-20 mynode-header flex align-center justify-between \" style={{ flexWrap: \"wrap\" }}>\r\n                    <div className='flex'>\r\n                        <div className='c-yellow node-table-item flex align-center' style={{ width: \"80px\" }}>\r\n                            <img alt=\"\" src=\"/img/myNode.svg\" style={{ marginRight: \"10px\", width: \"30px\" }} />\r\n                            {this.props.my_nodes.length}\r\n                        </div>\r\n                        <div className='c-yellow node-table-item flex align-center m-l-20' style={{ width: \"80px\" }}>\r\n                            <img alt=\"\" src={this.props.master_nft_url} style={{ marginRight: \"10px\", width: \"30px\" }} />\r\n                            : {this.props.my_nfts.length <= 10 ? this.props.my_nfts.length : 10}\r\n                        </div>\r\n                        <div className='c-yellow node-table-item flex align-center m-l-20' style={{ width: \"80px\" }}>\r\n                            <img alt=\"\" src={this.props.grand_nft_url} style={{ marginRight: \"10px\", width: \"30px\" }} />\r\n                            : {this.props.my_nfts.length > 10 ? this.props.my_nfts.length - 10 : 0}\r\n                        </div>\r\n                    </div>\r\n                    <div className='flex align-center button-set'>\r\n                        <div className='claim-button btn-outline c-green claim-all' onClick={this.PayAllNode.bind(this, -1)}> Pay ALL FEE</div>\r\n                        <div className='claim-button c-green claim-all' onClick={this.claimNode.bind(this, -1)}> CLAIM ALL</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"mx-auto custom-container mx-auto text-justify info-container m-b-30 mynode-list\">\r\n                    <div className='h-40 flex align-center node-title-header' style={{ width: \"100%\" }}>\r\n                        <div className='c-4cce13 padder-10' style={{ flex: \"1\" }}>NFT</div>\r\n                        <div className='c-4cce13 padder-10' style={{ flex: \"1\" }}>NAME</div>\r\n                        <div className='c-4cce13 text-center' style={{ flex: \"3\" }}>REWARD START TIME</div>\r\n                        <div className='c-4cce13 text-center' style={{ flex: \"2\" }}>REMAINS</div>\r\n                        <div className='c-4cce13 text-center' style={{ flex: \"2\" }}>REWARDS</div>\r\n                        <div className='c-4cce13 text-center' style={{ flex: \"1\" }}></div>\r\n                        <div className='c-4cce13 text-center' style={{ flex: \"1\" }}></div>\r\n                    </div>\r\n                    <div className='mynode-list-content'>\r\n                        <CustomScrollbars>\r\n                            {List}\r\n                        </CustomScrollbars>\r\n                    </div>\r\n                </div> */}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        my_nodes: state.my_nodes,\r\n        currentTime: state.currentTime,\r\n        my_nfts: state.my_nfts,\r\n        master_nft_url: state.master_nft_url,\r\n        grand_nft_url: state.grand_nft_url,\r\n        can_perform: state.can_perform,\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return { dispatch }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Nodes);\r\n"]},"metadata":{},"sourceType":"module"}